name: Build Wheels and Distribute to PyPI

on:
  push:
    branches:
        - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11","3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_ARCHS: "auto"  # Automatically detect architecture

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download wheels artifact
        uses: actions/download-artifact@v3
        with:
          name: wheels
          path: wheelhouse

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload wheels to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./wheelhouse/*
          asset_name: ${{ basename(asset_path) }}
          asset_content_type: application/zip

      - name: Upload wheels to PyPI
        run: pip install twine && twine upload wheelhouse/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}